/*
 * Creates our _"desktop"_, which basically allows
 * the user to select which application he wants to start.
 * This file will create what is normally being displayed
 * at your server's root URL, e.g. `/`.
 *
 * If you have overridden your default application in your
 * web.config, you can display this file's content in `/desktop`.
 */





/*
 * Including main Micro CSS files, and the serious skin
 */
micro.css.include





/*
 * Checking if user has configured a logo to use.
 */
p5.config.get:p5.desktop.logo
if:x:/@p5.config.get/*?value
  p5.config.get:p5.desktop.logo.url
  eval-x:x:/+/**(/href|/src)
  add:x:/../*/create-container-widget
    src
      widgets
        a
          href:x:/@p5.config.get/*?value
          widgets
            img
              src:x:/../*/p5.config.get/*?value
              style:"position:fixed;bottom:0;right:0;width:200px;max-width:25%;"





/*
 * Creating main content container.
 */
create-container-widget:desktop-main-container
  class:container





/*
 * Listing all modules that exists in system, and making sure we remove all that user does not have access to.
 *
 * Notice, by default a user does not have access to a module.
 */
list-folders:/modules/
for-each:x:/@list-folders/*

  /*
   * Checking if user has access to module, and if not, we remove the currently iterated folder,
   * to avoid creating a desktop icon for it.
   *
   * Defaulting access to "false".
   */
  if
    p5.auth.has-access:bool:false
      filter:p5.module
      path:x:/@_dp/#?name
    not

    /*
     * Removing module, since user doesn't have access to it.
     * This prevents the logic further down from creating a desktop icon for modules the user doesn't have access to.
     */
    set:x:/@_dp/#





/*
 * Listing all "desktop.hl" files inside the results of our above folder listing operation.
 */
list-files:x:/@list-folders/*?name
  filter:desktop.hl





/*
 * Looping through all "desktop.hl" files from above, and creating a widget wrapping each of them, 
 * that will invoke its associated "launch.hl" file, once clicked.
 */
for-each:x:/@list-files/*?name

  /*
   * Currently iterated app has a desktop widget declaration file.
   */
  load-file:x:/@_dp?value

  /*
   * Making sure we get the URL to point correctly for our desktop icon.
   */
  split:x:/@_dp?value
    =:/
  eval-x:x:/+/*/*
  add:x:/@load-file/*/*
    src
      href:x:/@split/1?name

  /*
   * Adding desktop icon to main desktop widget below.
   */
  add:x:/../*/create-widget/*/widgets/*/div/=desktop-apps/*/widgets
    src:x:/@load-file/*/*





/*
 * Creating actual desktop widget.
 *
 * This widget basically becomes your "desktop", with one icon, for each "component" that has a "desktop.hl" file.
 */
create-widget
  parent:desktop-main-container
  class:row
  widgets
    div
      class:col-100
      widgets
        div
          class:right
          widgets
            div
              class:strip toolbar
              widgets

                /*
                 * Creates the "install new module" button.
                 */
                button
                  innerValue:@"<span class=""icon-plus""></span>"
                  title:Install a new module
                  class:large
                  oninit

                    /*
                     * Verifying user is root, and if not, simply deleting button.
                     */
                    whoami
                    if:x:/@whoami/*/role?value
                      !=:root
                      delete-widget:x:/../*/_event?value

                  onclick

                    /*
                     * Launching our "install new module" file.
                     */
                    micro.evaluate.file:@DESKTOP/helpers/install-new-module.hl

                /*
                 * Creates the "uninstall existing module" button.
                 */
                button
                  innerValue:@"<span class=""icon-minus""></span>"
                  title:Uninstall a module
                  oninit

                    /*
                     * Verifying user is root, and if not, simply deleting button.
                     */
                    whoami
                    if:x:/@whoami/*/role?value
                      !=:root
                      delete-widget:x:/../*/_event?value

                  onclick

                    /*
                     * Launching our "uninstall module" file.
                     */
                    micro.evaluate.file:@DESKTOP/helpers/uninstall-module.hl

                /*
                 * Creates the "settings" button.
                 */
                button
                  innerValue:@"<span class=""icon-cog""></span>"
                  title:Change your settings
                  oninit

                    /*
                     * We do not enable settings for the default "guest" user.
                     */
                    whoami
                    if:x:/-/*/default?value
                      =:bool:true
                      delete-widget:x:/../*/_event?value

                  onclick

                    /*
                     * Launching settings form.
                     */
                    micro.evaluate.file:@DESKTOP/helpers/settings.hl

    div:desktop-apps
      class:col-100 desktop-apps
      widgets
