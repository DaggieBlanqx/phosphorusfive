
/*
 * Creates the __[desktop.plugins.post.create-dox-button]__ plugin Active Event.
 */

/*
 * This event creates a _"View Help Files"_ button on all modules with a widget containing the
 * CSS class of _"toolbar"_.
 */
create-event:desktop.plugins.post.create-dox-button

  /*
   * Trying to find the first widget on page with a CSS class containing the text "toolbar".
   */
  p5.web.widgets.find-first-like
    class:toolbar
  if:x:/@p5.web.widgets.find-first-like/*/*?value

    /*
     * Verifying user has access to help.
     */
    if
      p5.auth.has-access:bool:false
        filter:p5.module
        path:/modules/desktop/help/
      not

      /*
       * User doesn't have access to this module.
       */
      return

    /*
     * Inserting our widget as the second last widget into our "toolbar", if possible.
     */
    p5.web.widgets.get-children:x:/@p5.web.widgets.find-first-like/*/0?value

    /*
     * Checking if our toolbar actually had any children at all.
     */
    if:x:/@p5.web.widgets.get-children/*/*

      /*
       * Toolbar has children, adding our button as the second last button within it.
       */
      eval-x:x:/+/*/*
      add:x:/././*/create-literal-widget
        src
          before:x:/@p5.web.widgets.get-children/*/0/-?value

    else

      /*
       * The toolbar had no children, simply appending button into it.
       */
      eval-x:x:/+/*/*
      add:x:/././*/create-literal-widget
        src
          parent:x:/@p5.web.widgets.find-first-like/*/*?value

    /*
     * Creating our button widget.
     */
    create-literal-widget
      element:button
      innerValue:@"<span class=""icon-question""></span>"
      title:Display help files
      oninit

        /*
         * Checking if URL contains a help file reference.
         */
        p5.web.query.get:help
        if:x:/@p5.web.query.get/*?value
          eval-x:x:/+/*
          desktop.help.display
            file:x:/@p5.web.query.get/*?value

        /*
         * Checking if help has already been launched.
         */
        if
          desktop.help.is-visible

          /*
           * Help already visible, toggling button.
           */
          micro.css.toggle:x:/../*/_event?value
            class:toggled

      onclick

        /*
         * Toggling visibility of help files.
         */
        if
          desktop.help.is-visible

          /*
           * Help already visible, closing it.
           */
          desktop.help.close

        else

          /*
           * Displaying help system.
           */
          desktop.help.display

          /*
           * Srolling Hypereval into view.
           */
          micro.page.scroll-into-view:hyper-ide-help-wrapper

        /*
         * Making sure we toggle toggled state of button.
         */
        micro.css.toggle:x:/../*/_event?value
          class:toggled
